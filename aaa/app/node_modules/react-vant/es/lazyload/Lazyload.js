import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import { useRef } from 'react';
import cls from 'clsx';
import { useInViewport } from '../hooks';
import Skeleton from '../skeleton';
import { createNamespace } from '../utils';
import { mergeProps } from '../utils/get-default-props';
const [bem] = createNamespace('lazyload');
const Lazyload = p => {
  const props = mergeProps(p, {
    placeholder: _jsx(Skeleton, {
      title: true
    })
  });
  const ref = useRef();
  const [inViewPort] = useInViewport(ref);
  const {
    height,
    placeholder,
    children,
    className,
    style
  } = props;
  return inViewPort ? _jsx(_Fragment, {
    children: children
  }) : _jsx("div", Object.assign({
    ref: ref,
    className: cls(bem(), className),
    style: Object.assign({
      height
    }, style)
  }, {
    children: placeholder
  }));
};
export default Lazyload;