"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _tslib() {
  const data = require("tslib");
  _tslib = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
var _FlexContext = _interopRequireDefault(require("./FlexContext"));
var _utils = require("../utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/* eslint-disable @typescript-eslint/no-non-null-assertion */

const [bem] = (0, _utils.createNamespace)('flexbox');
const Flex = props => {
  const {
      direction,
      wrap,
      justify,
      align,
      gutter = 0,
      style,
      className,
      children
    } = props,
    rest = (0, _tslib().__rest)(props, ["direction", "wrap", "justify", "align", "gutter", "style", "className", "children"]);
  const getGutter = (0, _react().useMemo)(() => Array.isArray(gutter) ? gutter : [gutter, gutter], [gutter]);
  const rowStyle = Object.assign(Object.assign(Object.assign({}, getGutter[0] > 0 ? {
    marginLeft: getGutter[0] / -2,
    marginRight: getGutter[0] / -2
  } : {}), getGutter[1] > 0 ? {
    marginTop: getGutter[1] / -2,
    marginBottom: getGutter[1] / -2
  } : {}), style);
  const wrapCls = (0, _clsx().default)(className, bem([direction, wrap, justify ? `justify-${justify}` : false, align ? `align-${align}` : false]));
  return (0, _jsxRuntime().jsx)(_FlexContext.default.Provider, Object.assign({
    value: {
      gutter: getGutter
    }
  }, {
    children: (0, _jsxRuntime().jsx)("div", Object.assign({
      className: wrapCls,
      style: rowStyle
    }, rest, {
      children: children
    }))
  }));
};
var _default = exports.default = Flex;