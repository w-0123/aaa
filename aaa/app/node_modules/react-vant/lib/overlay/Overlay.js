"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _reactTransitionGroup() {
  const data = require("react-transition-group");
  _reactTransitionGroup = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
var _utils = require("../utils");
var _hooks = require("../hooks");
var _getDefaultProps = require("../utils/get-default-props");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const [bem] = (0, _utils.createNamespace)('overlay');
const Overlay = p => {
  const nodeRef = (0, _react().useRef)(null);
  const props = (0, _getDefaultProps.mergeProps)(p, {
    stopPropagation: ['click'],
    lockScroll: true,
    duration: 300
  });
  const {
    visible,
    duration
  } = props;
  const preventTouchMove = event => {
    if (!props.lockScroll) return;
    (0, _utils.preventDefault)(event, true);
  };
  const renderOverlay = () => {
    const style = Object.assign(Object.assign({
      zIndex: props.zIndex !== undefined ? +props.zIndex : undefined,
      touchAction: props.lockScroll && 'none'
    }, props.style), props.customStyle);
    if ((0, _utils.isDef)(duration)) {
      style.animationDuration = `${duration}ms`;
    }
    return (0, _utils.withStopPropagation)(props.stopPropagation, (0, _jsxRuntime().jsx)("div", Object.assign({
      ref: nodeRef,
      style: style,
      onClick: e => {
        var _a;
        if (e.target === e.currentTarget) {
          (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);
        }
      },
      className: (0, _clsx().default)(bem(), props.className)
    }, {
      children: props.children
    })));
  };
  (0, _hooks.useEventListener)('touchmove', preventTouchMove, {
    target: nodeRef
  });
  return (0, _jsxRuntime().jsx)(_reactTransitionGroup().CSSTransition, Object.assign({
    nodeRef: nodeRef,
    mountOnEnter: true,
    unmountOnExit: true,
    in: visible,
    timeout: duration,
    classNames: 'rv-fade'
  }, {
    children: renderOverlay()
  }));
};
var _default = exports.default = Overlay;