"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckMark = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const CheckMark = exports.CheckMark = (0, _react().memo)(() => {
  return (0, _jsxRuntime().jsx)("svg", Object.assign({
    width: '17px',
    height: '13px',
    viewBox: '0 0 17 13',
    version: '1.1',
    xmlns: 'http://www.w3.org/2000/svg'
  }, {
    children: (0, _jsxRuntime().jsx)("g", Object.assign({
      stroke: 'none',
      strokeWidth: '1',
      fill: 'none',
      fillRule: 'evenodd',
      strokeLinecap: 'round',
      strokeLinejoin: 'round'
    }, {
      children: (0, _jsxRuntime().jsx)("g", Object.assign({
        transform: 'translate(-2832.000000, -1103.000000)',
        stroke: '#FFFFFF',
        strokeWidth: '3'
      }, {
        children: (0, _jsxRuntime().jsx)("g", Object.assign({
          transform: 'translate(2610.000000, 955.000000)'
        }, {
          children: (0, _jsxRuntime().jsx)("g", Object.assign({
            transform: 'translate(24.000000, 91.000000)'
          }, {
            children: (0, _jsxRuntime().jsx)("g", Object.assign({
              transform: 'translate(179.177408, 36.687816)'
            }, {
              children: (0, _jsxRuntime().jsx)("polyline", {
                points: '34.2767388 22 24.797043 31.4796958 21 27.6826527'
              })
            }))
          }))
        }))
      }))
    }))
  }));
});