"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
function _reactTransitionGroup() {
  const data = require("react-transition-group");
  _reactTransitionGroup = function () {
    return data;
  };
  return data;
}
function _icons() {
  const data = require("@react-vant/icons");
  _icons = function () {
    return data;
  };
  return data;
}
var _utils = require("../utils");
var _getDefaultProps = require("../utils/get-default-props");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const [bem] = (0, _utils.createNamespace)('tag');
const Tag = p => {
  const props = (0, _getDefaultProps.mergeProps)(p, {
    show: true,
    type: 'default'
  });
  const nodeRef = (0, _react().useRef)(null);
  const onClose = event => {
    event.stopPropagation();
    if (props.onClose) {
      props.onClose(event);
    }
  };
  const getStyle = (0, _react().useMemo)(() => {
    if (props.plain) {
      return {
        color: props.textColor || props.color,
        borderColor: props.color
      };
    }
    return {
      color: props.textColor,
      background: props.color
    };
  }, [props.textColor, props.color, props.plain]);
  const renderTag = () => {
    const {
      type,
      mark,
      plain,
      round,
      size,
      closeable
    } = props;
    const classes = {
      mark,
      plain,
      round
    };
    if (size) {
      classes[size] = size;
    }
    const CloseIcon = closeable && (0, _jsxRuntime().jsx)(_icons().Cross, {
      className: (0, _clsx().default)(bem('close')),
      onClick: onClose
    });
    return (0, _jsxRuntime().jsxs)("span", Object.assign({
      ref: nodeRef,
      style: Object.assign(Object.assign({}, getStyle), props.style),
      className: (0, _clsx().default)(props.className, bem([classes, type])),
      onClick: props.onClick
    }, {
      children: [props.children, CloseIcon]
    }));
  };
  return (0, _jsxRuntime().jsx)(_reactTransitionGroup().CSSTransition, Object.assign({
    nodeRef: nodeRef,
    classNames: 'rv-fade',
    in: props.show,
    timeout: 300,
    unmountOnExit: true
  }, {
    children: renderTag()
  }));
};
var _default = exports.default = Tag;