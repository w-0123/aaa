"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useClickAway;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
var _getTargetElement = require("../utils/dom/getTargetElement");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// 鼠标点击事件，click 不会监听右键
const defaultEvent = 'click';
function useClickAway(target, onClickAway, eventName = defaultEvent) {
  const onClickAwayRef = (0, _react().useRef)(onClickAway);
  onClickAwayRef.current = onClickAway;
  (0, _react().useEffect)(() => {
    const handler = event => {
      const targets = Array.isArray(target) ? target : [target];
      if (targets.some(targetItem => {
        const targetElement = (0, _getTargetElement.getTargetElement)(targetItem);
        return !targetElement || (targetElement === null || targetElement === void 0 ? void 0 : targetElement.contains(event.target));
      })) {
        return;
      }
      onClickAwayRef.current(event);
    };
    document.addEventListener(eventName, handler);
    return () => {
      document.removeEventListener(eventName, handler);
    };
  }, [target, eventName]);
}