"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
var _TabsContext = _interopRequireDefault(require("./TabsContext"));
var _utils = require("../utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const [bem] = (0, _utils.createNamespace)('tab');
const TabPane = (0, _react().forwardRef)((props, ref) => {
  const parent = (0, _react().useContext)(_TabsContext.default);
  const {
    animated,
    swipeable,
    scrollspy,
    lazyRender,
    lazyRenderPlaceholder
  } = parent.props;
  const {
    index
  } = props;
  const name = (0, _react().useMemo)(() => {
    var _a;
    return (_a = props.name) !== null && _a !== void 0 ? _a : index;
  }, [index, props.name]);
  const active = (0, _react().useMemo)(() => name === parent.currentName, [name, parent.currentName]);
  const [inited, setInited] = (0, _react().useState)(() => active);
  const init = () => {
    setInited(true);
  };
  const isActive = (0, _react().useMemo)(() => {
    if (active && !inited) {
      init();
    }
    return active;
  }, [active, inited]);
  const show = scrollspy || isActive;
  const shouldRender = inited || scrollspy || !lazyRender;
  const Content = shouldRender ? props.children : lazyRenderPlaceholder;
  if (animated || swipeable) {
    return (0, _jsxRuntime().jsx)("div", Object.assign({
      ref: ref,
      role: 'tabpanel',
      className: (0, _clsx().default)(bem('pane'))
    }, {
      children: Content
    }));
  }
  return (0, _jsxRuntime().jsx)("div", Object.assign({
    ref: ref,
    style: {
      display: show ? 'block' : 'none'
    },
    role: 'tabpanel',
    className: (0, _clsx().default)(bem('pane'))
  }, {
    children: Content
  }));
});
var _default = exports.default = TabPane;