"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
var _utils = require("../utils");
var _popup = _interopRequireDefault(require("../popup"));
var _ConfigProviderContext = _interopRequireDefault(require("../config-provider/ConfigProviderContext"));
var _getDefaultProps = require("../utils/get-default-props");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const PRESET_ICONS = ['qq', 'link', 'weibo', 'wechat', 'poster', 'qrcode', 'weapp-qrcode', 'wechat-moments'];
function getIconURL(icon) {
  if (PRESET_ICONS.includes(icon)) {
    return `https://img.yzcdn.cn/vant/share-sheet-${icon}.png`;
  }
  return icon;
}
const [bem] = (0, _utils.createNamespace)('share-sheet');
const ShareSheet = p => {
  const props = (0, _getDefaultProps.mergeProps)(p, {
    options: [],
    closeOnPopstate: true,
    safeAreaInsetBottom: true,
    closeOnClickOverlay: true,
    duration: 300
  });
  const {
    locale
  } = (0, _react().useContext)(_ConfigProviderContext.default);
  const onCancel = () => {
    var _a;
    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);
  };
  const onSelect = (option, index) => {
    var _a;
    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, option, index);
  };
  const renderHeader = () => {
    const {
      title,
      description
    } = props;
    if (title || description) {
      return (0, _jsxRuntime().jsxs)("div", Object.assign({
        className: (0, _clsx().default)(bem('header'))
      }, {
        children: [title && (0, _jsxRuntime().jsx)("div", Object.assign({
          className: (0, _clsx().default)(bem('title'))
        }, {
          children: title
        })), description && (0, _jsxRuntime().jsx)("div", Object.assign({
          className: (0, _clsx().default)(bem('description'))
        }, {
          children: description
        }))]
      }));
    }
    return null;
  };
  const renderOption = (option, index) => {
    const {
      name,
      icon,
      className,
      description
    } = option;
    return (0, _jsxRuntime().jsxs)("div", Object.assign({
      role: 'button',
      tabIndex: 0,
      className: (0, _clsx().default)([bem('option'), className]),
      onClick: () => onSelect(option, index)
    }, {
      children: [typeof icon === 'string' ? (0, _jsxRuntime().jsx)("img", {
        alt: 'share sheet icon',
        src: getIconURL(icon),
        className: (0, _clsx().default)(bem('icon'))
      }) : icon, name && (0, _jsxRuntime().jsx)("span", Object.assign({
        className: (0, _clsx().default)(bem('name'))
      }, {
        children: name
      })), description && (0, _jsxRuntime().jsx)("span", Object.assign({
        className: (0, _clsx().default)(bem('option-description'))
      }, {
        children: description
      }))]
    }), index);
  };
  const renderOptions = (options, border, key) => (0, _jsxRuntime().jsx)("div", Object.assign({
    className: (0, _clsx().default)(bem('options', {
      border
    }))
  }, {
    children: options.map(renderOption)
  }), key);
  const renderRows = () => {
    const {
      options
    } = props;
    if (Array.isArray(options[0])) {
      return options.map((item, index) => renderOptions(item, index !== 0, index));
    }
    return renderOptions(options);
  };
  const renderCancelButton = () => {
    const {
      cancelText = locale.cancel
    } = props;
    if (cancelText) {
      return (0, _jsxRuntime().jsx)("button", Object.assign({
        type: 'button',
        className: (0, _clsx().default)(bem('cancel')),
        onClick: onCancel
      }, {
        children: cancelText
      }));
    }
    return null;
  };
  return (0, _jsxRuntime().jsxs)(_popup.default, Object.assign({
    round: true,
    className: (0, _clsx().default)(bem()),
    position: 'bottom',
    onClose: onCancel
  }, (0, _utils.pick)(props, ['closeOnPopstate', 'safeAreaInsetBottom', 'visible', 'overlay', 'duration', 'lockScroll', 'overlayStyle', 'overlayClass', 'closeOnClickOverlay']), {
    children: [renderHeader(), renderRows(), renderCancelButton()]
  }));
};
var _default = exports.default = ShareSheet;