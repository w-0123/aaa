"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
var _hooks = require("../hooks");
var _skeleton = _interopRequireDefault(require("../skeleton"));
var _utils = require("../utils");
var _getDefaultProps = require("../utils/get-default-props");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const [bem] = (0, _utils.createNamespace)('lazyload');
const Lazyload = p => {
  const props = (0, _getDefaultProps.mergeProps)(p, {
    placeholder: (0, _jsxRuntime().jsx)(_skeleton.default, {
      title: true
    })
  });
  const ref = (0, _react().useRef)();
  const [inViewPort] = (0, _hooks.useInViewport)(ref);
  const {
    height,
    placeholder,
    children,
    className,
    style
  } = props;
  return inViewPort ? (0, _jsxRuntime().jsx)(_jsxRuntime().Fragment, {
    children: children
  }) : (0, _jsxRuntime().jsx)("div", Object.assign({
    ref: ref,
    className: (0, _clsx().default)(bem(), className),
    style: Object.assign({
      height
    }, style)
  }, {
    children: placeholder
  }));
};
var _default = exports.default = Lazyload;