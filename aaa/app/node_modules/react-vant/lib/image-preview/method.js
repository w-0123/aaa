"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _tslib() {
  const data = require("tslib");
  _tslib = function () {
    return data;
  };
  return data;
}
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _icons() {
  const data = require("@react-vant/icons");
  _icons = function () {
    return data;
  };
  return data;
}
var _utils = require("../utils");
var _ImagePreview = _interopRequireDefault(require("./ImagePreview"));
var _getContainer = require("../utils/dom/getContainer");
var _render = require("../utils/dom/render");
var _canUseDom = _interopRequireDefault(require("../utils/dom/canUseDom"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const defaultConfig = {
  images: [],
  className: '',
  showIndex: true,
  closeable: false,
  closeIcon: (0, _jsxRuntime().jsx)(_icons().Clear, {}),
  startPosition: 0,
  swipeDuration: 300,
  closeOnPopstate: true,
  closeIconPosition: 'top-right'
};
// 可返回用于销毁此弹窗的方法
const open = props => {
  if (!(0, _canUseDom.default)()) return null;
  const {
      onClose = _utils.noop,
      beforeClose
    } = props,
    restProps = (0, _tslib().__rest)(props, ["onClose", "beforeClose"]);
  const userContainer = (0, _getContainer.resolveContainer)(props.teleport);
  const container = document.createElement('div');
  userContainer.appendChild(container);
  let destroy = _utils.noop;
  const TempDialog = () => {
    const [visible, setVisible] = (0, _react().useState)(false);
    (0, _react().useEffect)(() => {
      setVisible(true);
    }, []);
    destroy = p => {
      setVisible(false);
      if (onClose) onClose(p);
    };
    const _afterClose = p => (0, _tslib().__awaiter)(void 0, void 0, void 0, function* () {
      if ((yield beforeClose === null || beforeClose === void 0 ? void 0 : beforeClose(0)) !== false) {
        destroy(p);
        const unmountResult = (0, _render.unmount)(container);
        if (unmountResult && container.parentNode) {
          container.parentNode.removeChild(container);
        }
        return true;
      }
      return false;
    });
    return (0, _jsxRuntime().jsx)(_ImagePreview.default, Object.assign({}, defaultConfig, restProps, {
      visible: visible,
      teleport: () => container,
      onClose: destroy,
      beforeClose: _afterClose
    }));
  };
  (0, _render.render)((0, _jsxRuntime().jsx)(TempDialog, {}), container);
  return destroy;
};
const ImagePreview = Object.assign(_ImagePreview.default, {
  open
});
var _default = exports.default = ImagePreview;