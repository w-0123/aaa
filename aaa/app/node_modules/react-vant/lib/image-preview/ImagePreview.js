"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _jsxRuntime() {
  const data = require("react/jsx-runtime");
  _jsxRuntime = function () {
    return data;
  };
  return data;
}
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _clsx() {
  const data = _interopRequireDefault(require("clsx"));
  _clsx = function () {
    return data;
  };
  return data;
}
var _utils = require("../utils");
var _popup = _interopRequireDefault(require("../popup"));
var _slides = require("./slides");
var _SwiperPagIndicator = _interopRequireDefault(require("../swiper/SwiperPagIndicator"));
var _getDefaultProps = require("../utils/get-default-props");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const [bem] = (0, _utils.createNamespace)('image-preview');
const ImagePreview = _react().default.forwardRef((p, ref) => {
  const props = (0, _getDefaultProps.mergeProps)(p, {
    overlay: true,
    showIndex: true,
    images: [],
    swipeDuration: 300,
    startPosition: 0,
    closeIconPosition: 'top-right',
    showIndicators: false,
    closeOnlyClickCloseIcon: false,
    maxZoom: 3
  });
  const slidesRef = (0, _react().useRef)(null);
  const [active, setActive] = (0, _react().useState)(() => props.startPosition);
  const currentImage = _react().default.useMemo(() => props.images[active], [active, props.images]);
  const onSwipeChange = idx => {
    var _a;
    if (active !== idx) {
      setActive(idx);
      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, idx);
    }
  };
  const onClose = () => {
    var _a;
    (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props, {
      url: currentImage,
      index: active
    });
  };
  const renderContent = () => (0, _jsxRuntime().jsx)("div", Object.assign({
    className: (0, _clsx().default)(bem('content'))
  }, {
    children: props.images && (0, _jsxRuntime().jsx)(_slides.Slides, {
      ref: slidesRef,
      defaultIndex: props.startPosition,
      onIndexChange: onSwipeChange,
      images: props.images,
      lazyload: props.lazyload,
      onTap: () => {
        if (!props.closeOnlyClickCloseIcon) {
          onClose();
        }
      },
      maxZoom: props.maxZoom
    })
  }));
  const renderClose = () => {
    if (props.closeable) {
      return _react().default.cloneElement(props.closeIcon, {
        className: (0, _clsx().default)(bem('close-icon', props.closeIconPosition)),
        onClick: onClose
      });
    }
    return null;
  };
  const renderIndex = () => {
    if (props.showIndex) {
      return (0, _jsxRuntime().jsx)("div", Object.assign({
        className: (0, _clsx().default)(bem('index'))
      }, {
        children: props.indexRender ? props.indexRender({
          index: active,
          len: props.images.length
        }) : `${active + 1} / ${props.images.length}`
      }));
    }
    return null;
  };
  const renderIndicator = () => {
    if (props.showIndicators) {
      return (0, _jsxRuntime().jsx)("div", Object.assign({
        className: (0, _clsx().default)(bem('indicator'))
      }, {
        children: (0, _jsxRuntime().jsx)(_SwiperPagIndicator.default, {
          total: props.images.length,
          current: active
        })
      }));
    }
    return null;
  };
  _react().default.useImperativeHandle(ref, () => ({
    swipeTo: (index, immediate) => {
      var _a;
      setActive(index);
      (_a = slidesRef.current) === null || _a === void 0 ? void 0 : _a.swipeTo(index, immediate);
    }
  }));
  return (0, _jsxRuntime().jsxs)(_popup.default, Object.assign({
    className: (0, _clsx().default)(bem(), props.className),
    overlayClass: (0, _clsx().default)(bem('overlay'))
  }, (0, _utils.pick)(props, ['visible', 'overlayStyle', 'closeOnPopstate', 'onClosed', 'beforeClose', 'teleport']), {
    children: [renderClose(), renderContent(), renderIndex(), renderIndicator()]
  }));
});
var _default = exports.default = ImagePreview;